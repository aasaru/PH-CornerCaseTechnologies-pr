openapi: 3.0.0
servers:
  - description: SwaggerHub API Auto Mocking
    url: https://virtserver.swaggerhub.com/aasaru/paasuhalduse-x-tee-teenused/0.4.1
  - description: SwaggerHub API Auto Mocking
    url: https://virtserver.swaggerhub.com/aasaru/Oraakliliides/1.0.13
info:
  description: Sisaldab Pääsukese poolt standardiseeritud x-tee teeunuseid
  version: 0.4.1
  title: Pääsukese X-tee liides
  contact:
    email: you@your-company.com
  license:
    name: Apache 2.0
    url: 'http://www.apache.org/licenses/LICENSE-2.0.html'
tags:
  - name: All queries
    description: This secion lists all the queries described in this API
  - name: Offered by Pääsuke
    description: X-road queries offered by Pääsuke to query current or future mandates. These services , kes laadivad kehtivad volitused Pääsukesest.

  - name: Offered to Pääsuke
    description: Systems that store mandates on their side (like Statistikaamet and Tax and Customs Board) offer these queries for Pääsuke to pull teir state and display centrally
  - name: Offered to Pääsuke (additional)
    description: Systems that store mandates on their side and allow mandates to be added from Pääsuke.
  - name: Draft not in use
    description: Not used
  - name: internal
    description: used internally by Pääsuke, not public
paths:
  /delegates/{delegate}/representees:
    get:
      tags:
        - All queries
        - Offered by Pääsuke
      summary: List representees that the delegate can represent. Mandates (roles) are not included.
      operationId: getDelegateRepresentees
      description: |
        Kutsutakse kui sisseloginud kasutajale (= delegate) on vaja kuvada nimekirja ettevõtetest (või eraisikutest), keda tal on õigus esindada. Kehtivaid õigusi selle päringuga ei väljastata.
      parameters:
        - name: delegate
          in: path
          description: Person code or company code of the delegate. Starts with country code (ISO 3166-1 alpha-2).
          example: EE38302250123
          required: true
          schema:
            type: string
            pattern: '^[A-Z]{2}.+'
        - name: representeeType
          in: query
          description: Filter by representee types. SELF means that the person has the right to represent oneself.
          required: false
          schema:
            type: array
            items:
              type: string
              enum: [SELF, LEGAL_PERSON, NATURAL_PERSON]
        - name: hasRoleIn
          in: query
          description: "Filter out representees where delegate doesn't have any mandates with any of the roles in the list. Roles must be prefixed with namespace and colon. To match all roles in namespace use * like this: 'MYNS:*'. This parameter is only used if the service is provided by Pääsuke and must be ignored by others."
          example: AGENCY-X:job.ad.editor
          required: false
          schema:
            type: array
            items:
              type: string
              example: 'AGENCY-X:job.ad.editor'
        - name: skip
          in: query
          description: Skip this number of records for pagination
          required: false
          schema:
            type: integer
            format: int32
            minimum: 0
        - name: limit
          in: query
          description: Maximum number of records to return
          required: false
          schema:
            type: integer
            format: int32
            minimum: 0
            maximum: 500
      responses:
        '200':
          description: List of representees
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Person'
        '400':
          description: bad input parameter

  /delegates/{delegate}/representees/mandates:
    get:
      tags:
        - All queries
        - Offered to Pääsuke
      summary: List persons the delegate can represent. Mandates (roles) are included.
      operationId: getDelegateRepresenteesWithMandates
      description: |
        Second tab
      parameters:
        - name: delegate
          in: path
          description: Person code or company code of the delegate. Starts with country code (ISO 3166-1 alpha-2).
          example: EE38302250123
          required: true
          schema:
            type: string
            pattern: '^[A-Z]{2}.+'
        - name: hasRoleIn
          in: query
          description: "Filter out representees where delegate doesn't have any mandates with any of the roles in the list. Roles must be prefixed with namespace and colon. To match all roles in namespace use * like this: 'MYNS:*'. This parameter is only used if the service is provided by Pääsuke and must be ignored by others."
          example: AGENCY-X:job.ad.editor
          required: false
          schema:
            type: array
            items:
              type: string
              example: 'AGENCY-X:job.ad.editor'
        - name: skip
          in: query
          description: Skip this number of records for pagination
          required: false
          schema:
            type: integer
            format: int32
            minimum: 0
        - name: limit
          in: query
          description: Maximum number of records to return
          required: false
          schema:
            type: integer
            format: int32
            minimum: 0
            maximum: 500
      responses:
        '200':
          description: List of persons (with mandates) that delegate can represent.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/MandateTriplet'
        '400':
          description: bad input parameter


  /representees/{representee}/delegates/mandates:
    get:
      tags:
        - All queries
        - Offered to Pääsuke
      summary: List delegates with mandates
      operationId: getRepresenteeDelegatesWithMandates
      description: |
        Returns list of delegates who have any mandates.
        
        Protos: Ettevõtte esindajad ja volitatud isikud.
        
        Kui Väikefirma (representee) on andnud Raamatupidamisfirmale (subDelegatedBy) mingi rolli koos edasivolitamise (edasidelegeerimise) õigusega, siis saab Raamatupidamisfirma selle parameetri abil küsida, kellele tema omakorda on vastava volituse edasi volitanud (delegeerinud).

      parameters:
        - name: representee
          in: path
          description: Person code or company code of the representee. Starts with country code (ISO 3166-1 alpha-2).
          example: EE10391131
          required: true
          schema:
            type: string
            pattern: '^[A-Z]{2}.+'
        - name: namespace
          in: query
          description: Filter by namespace(s)
          example: STAT
          required: false
          schema:
            type: array
            items:
              type: string
            example: 'EMTA'
        - name: subDelegatedBy
          in: query
          description: Filter by subdelegator (edasivolitaja) code
          required: false
          example: EE10391132
          schema:
            type: string
        - name: hasRoleIn
          in: query
          description: "Filter out representees where delegate doesn't have any mandates with any of the roles in the list. Roles must be prefixed with namespace and colon. To match all roles in namespace use * like this: 'MYNS:*'. This parameter is only used if the service is provided by Pääsuke and must be ignored by others."
          example: AGENCY-X:job.ad.editor
          required: false
          schema:
            type: array
            items:
              type: string
              example: 'AGENCY-X:job.ad.editor'
        - name: skip
          in: query
          description: Skip this number of records for pagination
          required: false
          schema:
            type: integer
            format: int32
            minimum: 0
        - name: limit
          in: query
          description: Maximum number of records to return
          required: false
          schema:
            type: integer
            format: int32
            minimum: 0
            maximum: 500
      responses:
        '200':
          description: Matching mandates that are granted to delegates for this representee
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/MandateTriplet'
        '400':
          description: bad input parameter
        '422':
          description: Unprocessable request. For example system doesn't know about the namespace.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Problem'

  /representees/{representee}/delegates/{delegate}/mandates:
    get:
      tags:
        - All queries
        - Offered by Pääsuke
      summary: List active mandates of the delegate
      operationId: getRepresenteeDelegateWithMandates
      description: |
        Usually this endpoint is called after the user selects a legal entity who the delegate want's to represent at the given session.
      parameters:
        - name: representee
          in: path
          description: Person code or company code of the representee. Starts with country code (ISO 3166-1 alpha-2).
          example: EE10391131
          required: true
          schema:
            type: string
            pattern: '^[A-Z]{2}.+'
        - name: delegate
          in: path
          description: Person code or company code of the delegate. Starts with country code (ISO 3166-1 alpha-2).
          example: EE38302250123
          required: true
          schema:
            type: string
            pattern: '^[A-Z]{2}.+'
        - name: namespace
          in: query
          description: Filter by namespace (comma separated)
          required: false
          schema:
            type: string
            example: 'eSTAT,EMTA'
        - name: roles
          in: query
          description: Filter by role (comma separated)
          required: false
          schema:
            type: string
            example: 'Legal_person_representative_package'

      responses:
        '200':
          description: Matching mandates that are granted to the delegate for this representee
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MandateTriplet'
        '400':
          description: bad input parameter
        '422':
          description: Unprocessable request. For example system doesn't know about the namespace.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Problem'
    post:
      tags:
        - All queries
        - Offered by Pääsuke
      summary: Add mandates to a delegate under a representee
      operationId: addMandatesToDelegateFromMisp
      description: |
        Pääsuke pakub ise seda teenust liidestunud klientidele, kes hoiavad oma volitusi Pääsukeses. Teenuse kasutamine on vajalik juhul kui partnerasutus kasutab Pääsukest oma volituste süsteemina, aga keegi isik tuleb partnerasutusse (notariaalse volikirjaga) ja selle alusel tuleb partnerasutusel Pääsukesse sisse kanda volikirjal olevad volitused partnerasutuse nimeruumi.
      parameters:
        - name: representee
          in: path
          description: Person code or company code of the representee. Starts with country code (ISO 3166-1 alpha-2).
          example: EE10391131
          required: true
          schema:
            type: string
            pattern: '^[A-Z]{2}.+'
        - name: delegate
          in: path
          description: Person code or company code of the delegate. Starts with country code (ISO 3166-1 alpha-2).
          required: true
          example: EE38302250123
          schema:
            type: string
            pattern: '^[A-Z]{2}.+'
      requestBody:
        $ref: '#/components/requestBodies/MandatesToAddMisp'

      responses:
        '202':
          description: Accepted for processing
        '400':
          description: Incorrect format of the payload.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Problem'
        '403':
          description: You are not owner of the namespace.
        '404':
          description: Delegate doesn't have anything matching to remove
        '422':
          description: Unprocessable request. For example system doesn't know about the namespace.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Problem'

  /ns/{ns}/mandates:
    post:
      tags:
        - All queries
        - Offered to Pääsuke (additional)
      summary: Add a single mandate to a delegate under a representee
      operationId: addMandateToDelegate
      description: |
        
        Kui liidestuv süsteem pakub seda teenust Pääsukesele, siis lubab Pääsuke oma kasutajaliidese kaudu volitusi anda ja selle teenuse abil Pääsuke edastab (ühekaupa) uue volituse liidestunud süsteemile.
      parameters:
        - name: ns
          in: path
          description: Namespace
          example: GLOBAL1_EMTA
          required: true
          schema:
            type: string
      requestBody:
        $ref: '#/components/requestBodies/AddMandateTriplet'

      responses:
        '202':
          description: Accepted for processing
        '400':
          description: Incorrect format of the payload.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Problem'
        '403':
          description: You are not owner of the namespace.
        '404':
          description: Delegate doesn't have anything matching to remove
        '422':
          description: Unprocessable request. For example system doesn't know about the namespace.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Problem'


  /ns/{ns}/representees/{representee}/delegates/{delegate}/mandates/{mandateIdentifier}/subdelegates:
    post:
      tags:
        - All queries
        - Offered to Pääsuke (additional)
      summary: Sub-delegate a single mandate
      operationId: addMandateSubDelegate
      description: |

      parameters:
        - name: ns
          in: path
          description: Namespace
          example: GLOBAL1_EMTA
          required: true
          schema:
            type: string
        - name: representee
          in: path
          description: Person code or company code of the representee. Starts with country code (ISO 3166-1 alpha-2).
          example: EE10391131
          required: true
          schema:
            type: string
            pattern: '^[A-Z]{2}.+'
        - name: delegate
          in: path
          description: Person code or company code of the delegate. Starts with country code (ISO 3166-1 alpha-2).
          example: EE38302250123
          required: true
          schema:
            type: string
            pattern: '^[A-Z]{2}.+'
        - name: mandateIdentifier
          in: path
          description: Mandate to sub-delegate
          required: true
          example: 8923032032
          schema:
            type: string
      requestBody:
        $ref: '#/components/requestBodies/MandateToSubDelegate'

      responses:
        '202':
          description: Accepted for processing
        '400':
          description: Incorrect format of the payload.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Problem'
        '403':
          description: You are not owner of the namespace.
        '404':
          description: Delegate doesn't have anything matching to remove
        '422':
          description: Unprocessable request. For example system doesn't know about the namespace.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Problem'


  /ns/{ns}/representees/{representee}/delegate/mandates:
    patch:
      tags:
        - internal
      summary: Set representee dedelgates that are pulled from Äriregister or from Rahvastikuregister.
      operationId: setRepresenteeDelegatesDefinedExternally
      description: |
        Äriregistrist/Rahvastikuregistrist muudatusi sünkroniseerivad mikroteenused kutsuvad seda Pääsukese siseselt välja (et edastada juhatuse liikmed, prokuristid jne). Kaasa antakse TO BE olukord.
      parameters:
        - name: ns
          in: path
          description: Namespace
          example: GLOBAL1_EMTA
          required: true
          schema:
            type: string
        - name: representee
          in: path
          description: Person code or company code of the representee. Starts with country code (ISO 3166-1 alpha-2).
          example: EE10391131
          required: true
          schema:
            type: string
            pattern: '^[A-Z]{2}.+'
      requestBody:
        $ref: '#/components/requestBodies/AddMandateTriplets'

      responses:
        '200':
          description: Request processed successfully
        '400':
          description: Incorrect payload.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Problem'
        '403':
          description: You are not owner of the namespace.
        '404':
          description: Delegate doesn't have anything matching to remove
        '422':
          description: Unprocessable request. For example system doesn't know about the namespace.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Problem'



  /ns/{ns}/representees/{representee}/delegates/{delegate}:
    delete:
      tags:
        - Draft not in use
      summary: Remove all mandates from the delegate. THIS IS NOT USED AS WE ALWAYS WANT THE PAYLOADS TO BE SPECIFICY ABOUT WHAT IS GOING TO BE REMOVED.
      operationId: removeAllMandatesFromDelegate
      description: |
        The mandateIdentifier is returned by the query that returned the mandates.
      parameters:
        - name: ns
          in: path
          description: Namespace
          example: GLOBAL1_EMTA
          required: true
          schema:
            type: string
        - name: representee
          in: path
          description: Person code or company code of the representee. Starts with country code (ISO 3166-1 alpha-2).
          example: EE10391131
          required: true
          schema:
            type: string
            pattern: '^[A-Z]{2}.+'
        - name: delegate
          in: path
          description: Person code or company code of the delegate. Starts with country code (ISO 3166-1 alpha-2).
          required: true
          example: EE38302250123
          schema:
            type: string
            pattern: '^[A-Z]{2}.+'
        - name: namespace
          in: query
          description: Namespace of the mandate
          required: true
          example: eSTAT
          schema:
            type: string
        - name: startDate
          in: query
          schema:
            type: string
        - name: endDate
          in: query
          schema:
            type: string
      responses:
        '200':
          description: Removed sucessfully
        '202':
          description: Request accepted but not yet removed
        '400':
          description: Invalid parameter
        '403':
          description: You are not owner of the namespace.
        '404':
          description: Delegate doesn't have anything matching to remove
        '422':
          description: Unprocessable request. For example system doesn't know about the namespace.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Problem'


  /ns/{ns}/representees/{representeeIdentifier}/delegates/{delegateIdentifier}/mandates/{mandateIdentifier}:
    delete:
      tags:
        - All queries
        - Offered to Pääsuke
      summary: Remove a specific mandate from the delegate
      operationId: removeMandateFromDelegate
      description: |
        The mandateIdentifier is returned by the query that returned the mandates.
      parameters:
        - name: ns
          in: path
          description: Namespace
          example: GLOBAL1_EMTA
          required: true
          schema:
            type: string
        - name: representeeIdentifier
          in: path
          description: Person code or company code of the representee. Implementator can use any form of identifier (like internal person id)
          example: 123e4567-e89b-12d3-a456-426614174000
          required: true
          schema:
            type: string
        - name: delegateIdentifier
          in: path
          description: Person code or company code of the delegate. Implementator can use any form of identifier (like internal person id).
          required: true
          example: 754864
          schema:
            type: string
        - name: mandateIdentifier
          in: path
          description: Role to delete. Implementator can use any form of identifier (like internal mandate id).
          required: true
          example: 8647
          schema:
            type: string
      responses:
        '200':
          description: Removed sucessfully
        '202':
          description: Request accepted but not yet removed
        '400':
          description: Invalid parameter
        '403':
          description: You are not owner of the namespace.
        '404':
          description: Delegate doesn't have anything matching to remove
        '422':
          description: Unprocessable request. For example system doesn't know about the namespace.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Problem'

  /roles:
    get:
      tags:
        - All queries
        - Offered by Pääsuke
        - Offered to Pääsuke
      summary: List roles with translations
      description: |
        When 'If-Modified-Since' is included in the request the service responds HTTP Status code 304 if nor roles have been changed since that time. Otherwise all results (that match the filters) are returned (even the ones that have modified time earlier than If-Modified-Since parameter).
      operationId: getRoles
      parameters:
        # https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/If-Modified-Since
        - name: If-Modified-Since
          in: header
          schema:
            type: string
            format: date-time
            example: 2022-10-18T17:32:28+02:00
          required: false
        - name: namespace
          in: query
          description: Filter by namespace(s)
          example: STAT
          required: false
          schema:
            type: array
            items:
              type: string
            example: 'EMTA'
      responses:
        '200':
          description: List roles of some namespace(s) with translations
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/RoleDefinition'
        '304':
          description: List of roles is not modified. Might be returned only if request sent additional header "If-Modified-Since" and no changes have been done since that date.
        '422':
          description: Unprocessable request. For example system doesn't know about the namespace.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Problem'

  /ns:
    get:
      tags:
        - All queries
        - internal
      summary: List namespaces with translations
      operationId: getNamespaces
      parameters:
        - name: ownerCode
          in: query
          description: Filter by owner registry code
          example: '70000332'
          required: false
          schema:
            type: string
            example: 'STAT,EMTA'
      responses:
        '200':
          description: List of namespaces with translations
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/NamespaceDefinition'

components:
  requestBodies:
    MandatesToAddMisp:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/MandatesToAddMisp'
      description: Enter details of the mandate(s)

    MandateToSubDelegate:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/MandateToSubDelegate'
      description: Enter details of the subdelegate mandate

    AddMandateTriplet:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/AddMandateTriplet'
      description: Enter details of mandate to add

    AddMandateTriplets:
      content:
        application/json:
          schema:
            type: array
            items:
              $ref: '#/components/schemas/AddMandateTriplet'
      description: Enter details of mandate to add

  schemas:
    MandatesToAddMisp:
      type: object
      required:
        - mandates
        - comment
      properties:
        comment:
          type: string
          description: The reason why mandates are added manually
        mandates:
          type: array
          description: Mandates to be added
          items:
            $ref: '#/components/schemas/MandateToAddMisp'

    AddMandateTriplet:
      type: object
      required:
        - representee
        - delegate
        - mandates
      properties:
        representee:
          $ref: '#/components/schemas/AddPerson'
        delegate:
          $ref: '#/components/schemas/AddPerson'
        mandates:
          type: array
          items:
            $ref: '#/components/schemas/MandateToAdd'


    MandateTriplet:
      type: object
      required:
        - id
        - representee
        - delegate
        - mandates
      properties:
        id:
          type: string
          format: string
          description: ID
          example: d290f1ee-6c54-4b01-90e6-d701748f0851
        representee:
          $ref: '#/components/schemas/Person'
        delegate:
          $ref: '#/components/schemas/Person'
        mandates:
          type: array
          description: Mandates
          items:
            $ref: '#/components/schemas/Mandate'

    Person:
      type: object
      required:
        - id
        - type
        - identityCodeCountry
        - identityCode
      properties:
        id:
          type: string
          format: string
          example: d290f1ee-6c54-4b01-90e6-d701748f0851
          description: ID
        type:
          type: string
          enum: [NATURAL_PERSON, LEGAL_PERSON]
          description: Type
        name:
          type: string
          format: string
          example: Jüri Juurikas
          description: Name
        identityCodeCountry:
          type: string
          example: EE
          description: Identity code country
        identityCode:
          type: string
          example: 38302250123
          description: Identity code
        links:
          type: array
          description: Links that indicate allowed actions and provide parameters for for calling other services
          items:
            $ref: '#/components/schemas/Link'

    AddPerson:
      type: object
      required:
        - type
        - identityCodeCountry
        - identityCode
      properties:
        type:
          type: string
          enum: [NATURAL_PERSON, LEGAL_PERSON]
          description: Type
        name:
          type: string
          format: string
          example: Jüri Juurikas
          description: Name
        identityCodeCountry:
          type: string
          example: EE
          description: Identity code country
        identityCode:
          type: string
          example: 38302250123
          description: Identity code

    MandateToAdd:
      type: object
      properties:
        role:
          type: string
          format: string
          example: 'ACCOUNTANT'
          description: 'Role name'
        validFrom:
          type: string
          format: date
          example: '2017-07-21'
          description: Valid from date.
        validIndefinitely:
          type: boolean
          description: Is valid indefinitely
          example: false
        validThrough:
          type: string
          format: date
          example: '2024-02-21'
          description: Valid through (last day is inclusive, used only if not valid indefinitely)

    MandateToAddMisp:
      type: object
      required:
        - namespace
        - role
      properties:
        namespace:
          type: string
          format: string
          description: The namespace the mandate is added under
          example: 'STAT_ESTAT'
        role:
          type: string
          format: string
          description: Role
          example: 'Legal_person_data_viewer_package'
        validFrom:
          type: string
          format: date
          example: '2017-07-21'
          description: Valid from date.
        validIndefinitely:
          type: boolean
          description: Is valid indefinitely
        validThrough:
          type: string
          format: date
          example: '2024-02-21'
          description: Valid through (last day is inclusive, used only if not valid indefinitely)

    MandateToSubDelegate:
      type: object
      properties:
        validFrom:
          type: string
          format: date
          example: '2017-07-21'
          description: Valid from date.
        validIndefinitely:
          type: boolean
          description: Is valid indefinitely
        validThrough:
          type: string
          format: date
          example: '2024-02-21'
          description: Valid through (last day is inclusive, used only if not valid indefinitely)


    Mandate:
      type: object
      required:
        - namespace
        - role
      properties:
        id:
          type: string
          format: string
          example: d290f1ee-6c54-4b01-90e6-d701748f0851
          description: ID
        namespace:
          type: string
          format: string
          example: 'STAT'
          description: Namespace
        role:
          type: string
          format: string
          example: 'Legal_person_data_viewer_package'
          description: Role
        validFrom:
          type: string
          format: date
          example: '2017-07-21'
          description: Valid from
        validThrough:
          type: string
          format: date
          example: '2024-02-21'
          description: Valid through (last day is inclusive, null if valid indefinitely)
        canSubDelegate:
          type: boolean
          description: Does the person have the right to sub-delegate (edasi volitada) this mandate.
        links:
          type: array
          description: Links that indicate allowed actions (like delete) and provide params for for calling other services
          items:
            $ref: '#/components/schemas/Link'

    Link:
      type: object
      properties:
        href:
          type: string
          format: url
          example: '/representees/representeeIdentifierAtStat/delegates/delegateidentifierAtStat/mandates'
        rel:
          type: string
          example: 'getRepresenteeDelegateWithMandates'

    NamespaceDefinition:
      type: object
      required:
        - namespace
      properties:
        namespace:
          type: string
          format: string
          example: 'STAT'
          description: Namespace
          pattern: "[A-Z0-9_\\.]+"
        parentNamespace:
          type: string
          format: string
          example: null
          description: Parent namespace (has value if namespace type is set to 'CHILD')
        title:
          type: array
          description: Title
          items:
            $ref: '#/components/schemas/Translation'
        hiddenDescription:
          type: array
          description: Namespace description that is not public to end users and can only be in a single language (Estonian or English)
          items:
            $ref: '#/components/schemas/Translation'
        type:
          type: string
          nullable: false
          enum:
            - PARENT
            - CHILD
            - STANDALONE
            - AUTOMATIC
            - EXTERNAL
          example: STANDALONE
          description: Roles in PARENT namespace cannot be assigned to delegates. CHILD namespace must point at some parent_namespace and can only declare roles that exists in that parent namespace. AUTOMATIC namespace has roles that are automatically assigned and removed from persons based on some external info (for example when becoming a management board member of some company). STANDALONE roles are regular roles. EXTERNAL roles (and mandates connected with these roles) are stored at owner's side and only made available to Pääsuke.
        owner:
          $ref: '#/components/schemas/NamespaceOwner'

    NamespaceOwner:
      type: object
      required:
        - name
      properties:
        name:
          type: string
          format: string
          example: 'RIA'
          description: Name of the agency who is the maintainer of the namespace
        code:
          type: string
          format: string
          example: '70006317'
          description: Registry code of the maintainer
    RoleDefinition:
      type: object
      required:
        - namespace
        - role
        - metadata
      properties:
        id:
          type: string
          format: string
          example: d290f1ee-6c54-4b01-90e6-d701748f0851
          description: ID
        namespace:
          type: string
          format: string
          example: 'STAT'
          description: Namespace
        role:
          type: string
          format: string
          example: 'Respondent'
          description: Role
          pattern: "[A-Za-z0-9_\\.]+"
        title:
          $ref: '#/components/schemas/Translation'
        description:
          $ref: '#/components/schemas/Translation'
        state:
          type: string
          nullable: false
          enum:
            - ACTIVE
            - ACTIVE_GOVERNMENT
            - HIDDEN
            - REMOVED
          description: 'Role is ACTIVE if it can be assigned; ACTIVE_GOVERNMENT if role can be assigned only to representees that are govenrment agencyes (representee registry code starts with 7); HIDDEN if role is still supported but cannot be assigned to new employees; REMOVED if role is no longer in action'
        modified:
          type: string
          format: date-time
          description: Last modified
          example: '2022-10-18T13:00:00+02:00'
        metadata:
          $ref: '#/components/schemas/RoleMetadata'

    RoleMetadata:
      type: object

    Translation:
      type: object
      required:
        - et
        - en
      properties:
        et:
          type: string
          description: Translation in Estonian
          example: Tere
        en:
          type: string
          description: Translation in English
          example: Hello
        ru:
          type: string
          description: Translation in Russian
          example: Привет

    # https://www.belgif.be/specification/rest/api-guide/#error-handling
    Problem:
      description: A Problem Details object (RFC 7807)
      type: object
      properties:
        type:
          type: string
          format: uri
          description: An absolute URI that identifies the problem type
          default: about:blank  # kept for backwards-compatibility, type will be mandatory in problem-v2
        href:
          type: string
          format: uri
          description: An absolute URI that, when dereferenced, provides human-readable documentation for the problem type (e.g. using HTML).
        title:
          type: string
          description: A short summary of the problem type. Written in English and readable for engineers (usually not suited for non technical stakeholders and not localized).
          example: Service Unavailable
        status:
          type: integer
          format: int32
          description: The HTTP status code generated by the origin server for this occurrence of the problem.
          minimum: 400
          maximum: 600
          exclusiveMaximum: true
          example: 503
        detail:
          type: string
          description: A human-readable explanation specific to this occurrence of the problem
        instance:
          type: string
          format: uri
          description: An absolute URI reference that identifies the specific occurrence of the problem. It may or may not yield further information if dereferenced.
      example:
        {
          "type": "urn:problem-type:belgif:payloadTooLarge",
          "href": "https://www.belgif.be/specification/rest/api-guide/problems/payloadTooLarge.html", # location of linked doc will change in the future to recommended URI structure
          "title": "Payload Too Large",
          "status": 413,
          "detail": "Request message must not be larger than 10 MB",
          "instance": "urn:uuid:123e4567-e89b-12d3-a456-426614174000",
          "limit": 10485760  # additional properties specific to the problem type are allowed
        }